{"ast":null,"code":"import _slicedToArray from\"/Users/austinly/Documents/nology/fire/fire-project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _createForOfIteratorHelper from\"/Users/austinly/Documents/nology/fire/fire-project/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import{IncomeTaxProfile,NetWorth,taxTime}from\"./calcTS-mod\";export var inputLabels=[\"Gross Income\",\"Expenses\",\"Super Contribution Rate\",\"Deductions\",\"Fringe Benefits\",\"HELP Balance\",\"Super Balance\",\"Investments Balance\",\"Assumed Growth\"];export var checkBoxLabels=[\"Super Inclusive\",\"Max Super Contributions\",\"Private Hospital Cover\"];export var resultLabels=[\"Super Contribution\",\"Reportable Contributions\",\"Medicare Levy\",\"Medicare Levy Surcharge\",\"HELP Repayment\",\"Base Tax\",\"Total Tax\",\"Net Income\",\"Available To Invest\",\"HELP Balance\",\"Super Balance\",\"Investments Balance\",\"Tax Rate\",\"MLS Rate\",\"HELP Repayment Rate\"];export var formProcessor=function formProcessor(formData){var formDataVals={};var _iterator=_createForOfIteratorHelper(formData.entries()),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=_slicedToArray(_step.value,2),key=_step$value[0],value=_step$value[1];formDataVals[key]=Number(value)||value===\"0\"?Number(value):value;}}catch(err){_iterator.e(err);}finally{_iterator.f();}console.log(\"Form Data:\",formDataVals);var netWorth=new NetWorth(formDataVals.grossIncome,formDataVals.helpBalance,formDataVals.superBalance,formDataVals.investmentsBalance);console.log(netWorth);var incomeTaxProfile=new IncomeTaxProfile(netWorth,formDataVals.expenses,Boolean(formDataVals.superInclusive),formDataVals.superContributionRate,formDataVals.deductions,formDataVals.fringeBenefits,Boolean(formDataVals.privateHospitalCover));console.log(incomeTaxProfile);return taxTime(incomeTaxProfile,Boolean(formDataVals.max),formDataVals.growth);};","map":{"version":3,"names":["IncomeTaxProfile","NetWorth","taxTime","inputLabels","checkBoxLabels","resultLabels","formProcessor","formData","formDataVals","entries","key","value","Number","console","log","netWorth","grossIncome","helpBalance","superBalance","investmentsBalance","incomeTaxProfile","expenses","Boolean","superInclusive","superContributionRate","deductions","fringeBenefits","privateHospitalCover","max","growth"],"sources":["/Users/austinly/Documents/nology/fire/fire-project/src/services/netIncomeService.js"],"sourcesContent":["import { IncomeTaxProfile, NetWorth, taxTime } from \"./calcTS-mod\";\n\nexport const inputLabels = [\n    \"Gross Income\",\n    \"Expenses\",\n    \"Super Contribution Rate\",\n    \"Deductions\",\n    \"Fringe Benefits\",\n    \"HELP Balance\",\n    \"Super Balance\",\n    \"Investments Balance\",\n    \"Assumed Growth\",\n];\n\nexport const checkBoxLabels = [\n    \"Super Inclusive\",\n    \"Max Super Contributions\",\n    \"Private Hospital Cover\",\n];\n\nexport const resultLabels = [\n    \"Super Contribution\",\n    \"Reportable Contributions\",\n    \"Medicare Levy\",\n    \"Medicare Levy Surcharge\",\n    \"HELP Repayment\",\n    \"Base Tax\",\n    \"Total Tax\",\n    \"Net Income\",\n    \"Available To Invest\",\n    \"HELP Balance\",\n    \"Super Balance\",\n    \"Investments Balance\",\n    \"Tax Rate\",\n    \"MLS Rate\",\n    \"HELP Repayment Rate\",\n];\n\nexport const formProcessor = (formData) => {\n    let formDataVals = {};\n    for (const [key, value] of formData.entries()) {\n        formDataVals[key] =\n            Number(value) || value === \"0\" ? Number(value) : value;\n    }\n    console.log(\"Form Data:\", formDataVals);\n\n    const netWorth = new NetWorth(\n        formDataVals.grossIncome,\n        formDataVals.helpBalance,\n        formDataVals.superBalance,\n        formDataVals.investmentsBalance,\n    );\n    console.log(netWorth);\n    const incomeTaxProfile = new IncomeTaxProfile(\n        netWorth,\n        formDataVals.expenses,\n        Boolean(formDataVals.superInclusive),\n        formDataVals.superContributionRate,\n        formDataVals.deductions,\n        formDataVals.fringeBenefits,\n        Boolean(formDataVals.privateHospitalCover),\n    );\n    console.log(incomeTaxProfile);\n    return taxTime(\n        incomeTaxProfile,\n        Boolean(formDataVals.max),\n        formDataVals.growth,\n    );\n};\n"],"mappings":"wSAAA,OAASA,gBAAT,CAA2BC,QAA3B,CAAqCC,OAArC,KAAoD,cAApD,CAEA,MAAO,IAAMC,YAAW,CAAG,CACvB,cADuB,CAEvB,UAFuB,CAGvB,yBAHuB,CAIvB,YAJuB,CAKvB,iBALuB,CAMvB,cANuB,CAOvB,eAPuB,CAQvB,qBARuB,CASvB,gBATuB,CAApB,CAYP,MAAO,IAAMC,eAAc,CAAG,CAC1B,iBAD0B,CAE1B,yBAF0B,CAG1B,wBAH0B,CAAvB,CAMP,MAAO,IAAMC,aAAY,CAAG,CACxB,oBADwB,CAExB,0BAFwB,CAGxB,eAHwB,CAIxB,yBAJwB,CAKxB,gBALwB,CAMxB,UANwB,CAOxB,WAPwB,CAQxB,YARwB,CASxB,qBATwB,CAUxB,cAVwB,CAWxB,eAXwB,CAYxB,qBAZwB,CAaxB,UAbwB,CAcxB,UAdwB,CAexB,qBAfwB,CAArB,CAkBP,MAAO,IAAMC,cAAa,CAAG,QAAhBA,cAAgB,CAACC,QAAD,CAAc,CACvC,GAAIC,aAAY,CAAG,EAAnB,CADuC,yCAEZD,QAAQ,CAACE,OAAT,EAFY,YAEvC,+CAA+C,+CAAnCC,GAAmC,gBAA9BC,KAA8B,gBAC3CH,YAAY,CAACE,GAAD,CAAZ,CACIE,MAAM,CAACD,KAAD,CAAN,EAAiBA,KAAK,GAAK,GAA3B,CAAiCC,MAAM,CAACD,KAAD,CAAvC,CAAiDA,KADrD,CAEH,CALsC,qDAMvCE,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BN,YAA1B,EAEA,GAAMO,SAAQ,CAAG,GAAId,SAAJ,CACbO,YAAY,CAACQ,WADA,CAEbR,YAAY,CAACS,WAFA,CAGbT,YAAY,CAACU,YAHA,CAIbV,YAAY,CAACW,kBAJA,CAAjB,CAMAN,OAAO,CAACC,GAAR,CAAYC,QAAZ,EACA,GAAMK,iBAAgB,CAAG,GAAIpB,iBAAJ,CACrBe,QADqB,CAErBP,YAAY,CAACa,QAFQ,CAGrBC,OAAO,CAACd,YAAY,CAACe,cAAd,CAHc,CAIrBf,YAAY,CAACgB,qBAJQ,CAKrBhB,YAAY,CAACiB,UALQ,CAMrBjB,YAAY,CAACkB,cANQ,CAOrBJ,OAAO,CAACd,YAAY,CAACmB,oBAAd,CAPc,CAAzB,CASAd,OAAO,CAACC,GAAR,CAAYM,gBAAZ,EACA,MAAOlB,QAAO,CACVkB,gBADU,CAEVE,OAAO,CAACd,YAAY,CAACoB,GAAd,CAFG,CAGVpB,YAAY,CAACqB,MAHH,CAAd,CAKH,CA9BM"},"metadata":{},"sourceType":"module"}